/* BASIS */
.mPlayer {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--surface, #fff);
  box-shadow: 0 -10px 24px rgba(0, 0, 0, 0.12);
  z-index: 500;
  /* Force its own compositing layer to avoid mobile stacking bugs */
  transform: translateZ(0);
  will-change: transform;
}

/* MINI */
.mPlayer--mini {
  position: relative;
  min-height: 76px;
  padding: 22px 16px 16px;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.mPlayer__top {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  height: 6px;
  background: #e9e9ef;
  overflow: hidden;
}

.mPlayer__topFill {
  height: 100%;
  background: linear-gradient(90deg, #0b1a64 0%, #1d2b89 100%);
}

.mMini__body {
  display: flex;
  align-items: center;
  gap: 16px;
}

.mMini__info {
  flex: 1;
  display: flex;
  align-items: center;
  gap: 12px;
  border: none;
  background: transparent;
  padding: 0;
  text-align: left;
  transform: translateX(var(--drag-x, 0px));
  transition: transform 160ms ease;
}
.mMini__info.isDragging { transition: none; }

.mMini__cover {
  width: 48px;
  height: 48px;
  border-radius: 12px;
  background: #fff;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);
  object-fit: cover;
}

.mMini__text {
  display: flex;
  flex-direction: column;
  gap: 4px;
  overflow: hidden;
}

.mMini__title {
  font-weight: 800;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.mMini__artist {
  color: var(--color-primary, #1d2b89);
  font-size: 14px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.mMini__play {
  margin-left: auto;
  width: 48px;
  height: 48px;
  display: grid;
  place-items: center;
  border: none;
  border-radius: 999px;

}

.mMini__play img {
  width: 28px;
  height: 28px;
}

/* FULL */
.mPlayer__backdrop {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.35);
  backdrop-filter: blur(2px);
  /* Place the backdrop just beneath the player card */
  z-index: 499;
  /* Promote to its own layer to ensure correct stacking on mobile */
  transform: translateZ(0);
  will-change: transform;
}

.mPlayer--full {
  left: 10px;
  right: 10px;
  bottom: 10px;
  top: auto;
  border-radius: 18px;
  overflow: hidden;  max-height: 86vh;
}

.mFull__chev {
  position: absolute;
  top: 8px;
  left: 50%;
  transform: translateX(-50%);
  width: 36px;
  height: 28px;
  border-radius: 999px;
  border: none;
  background: rgba(0, 0, 0, 0.06);
  z-index: 6;
}

.mFull__content { padding: 56px 18px 18px; display: grid; gap: 28px; justify-items: center; align-content: center; grid-template-rows: auto auto auto; touch-action: pan-y; height: 100%; }

.mFull__content.isDragging { transition: none; }
.mFull__content.isSwipe-left { animation: mFull-swipe-left 220ms ease; }
.mFull__content.isSwipe-right { animation: mFull-swipe-right 220ms ease; }

@keyframes mFull-swipe-left {
  from { transform: translateX(0); opacity: 1; }
  to { transform: translateX(-20%); opacity: 0.92; }
}
@keyframes mFull-swipe-right {
  from { transform: translateX(0); opacity: 1; }
  to { transform: translateX(20%); opacity: 0.92; }
}

.mFull__cover {
  width: min(340px, 70vw, 38vh);
  height: min(340px, 70vw, 38vh);
  border-radius: 16px;
  margin-top: 1rem;
  background: #fff;
  object-fit: cover;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.18);
}

.mFull__title {
  font-size: 20px;
  font-weight: 800;
}

.mFull__artist {
  font-size: 16px;
  color: var(--color-primary, #1d2b89);
}

.mFull__transport {
  display: flex;
  align-items: center;
  gap: 18px;
}

.mFull__controls {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 18px;
  width: 100%;
}

.mFull__queue {
  border: none;
  background: transparent; /* no circular background */
  width: 44px;
  height: 44px;
  border-radius: 999px;
  display: grid;
  place-items: center;
}

.mFull__queue img {
  width: 22px;
  height: 22px;
}

.mFull__queue:focus-visible,
.mFull__queue:hover {
  background: transparent;
}

.mFull__more .trackMenu__trigger {
  width: 44px;
  height: 44px;
  background: transparent; /* remove circular background */
  border-radius: 999px;
}

.mFull__more .trackMenu__trigger:focus-visible,
.mFull__more .trackMenu__trigger:hover {
  background: transparent;
}

.mBtn {
  border: none;
  background: transparent;
}

.mBtn--play img {
  width: 40px;
  height: 40px;
}

.mBtn--skip img {
  width: 22px;
  height: 22px;
}

.mFull__progress {
  width: 92%;
  height: 10px;
  border-radius: 999px;
  background: #e9e9ef;
  overflow: hidden;
}

.mFull__progressFill {
  height: 100%;
  background: linear-gradient(90deg, #0b1a64 0%, #1d2b89 100%);
}

.mFull__time {
  width: 92%;
  display: flex;
  justify-content: space-between;
  color: #6a6a75;
}



/* Only move the hero (cover + text), not the controls */
.mFull__hero { position: relative; width: 100%; display: grid; justify-items: center; }
.mFull__heroTrack--current { transform: translateX(var(--drag-x, 0px)); transition: transform 180ms ease; }
.mFull__heroTrack { display: grid; justify-items: center; gap: 14px; }
.mFull__heroTrack--prev,
.mFull__heroTrack--next { position: absolute; left: 0; right: 0; pointer-events: none; opacity: 0; }
.mFull__heroTrack--prev { transform: translateX(calc(-100% + var(--drag-x, 0px))); }
.mFull__heroTrack--next { transform: translateX(calc(100% + var(--drag-x, 0px))); }
.mFull__content.isDragging .mFull__heroTrack--current { transition: none; }
.mFull__content.isSwipe-left .mFull__heroTrack--current { animation: mFull-swipe-left 220ms ease; }
.mFull__content.isSwipe-right .mFull__heroTrack--current { animation: mFull-swipe-right 220ms ease; }


/* Mini: move only the info (not play button) */
.mMini__hero { position: relative; flex: 1; }
.mMini__track--current { transform: translateX(var(--drag-x, 0px)); transition: transform 160ms ease; display: flex; align-items: center; gap: 12px; }
.mMini__track--prev,
.mMini__track--next { position: absolute; left: 0; right: 0; pointer-events: none; opacity: 0; display: flex; align-items: center; gap: 12px; }
.mMini__track--prev { transform: translateX(calc(-100% + var(--drag-x, 0px))); }
.mMini__track--next { transform: translateX(calc(100% + var(--drag-x, 0px))); }
.mMini__hero.isDragging .mMini__track--current { transition: none; }
.mMini__hero.isDragging .mMini__track--prev,
.mMini__hero.isDragging .mMini__track--next { opacity: 0.9; }







